"""First commit

Revision ID: bdaf76cf3999
Revises: 
Create Date: 2021-10-02 10:02:53.251804

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bdaf76cf3999'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('daily_prices_index', table_name='daily_prices')
    op.drop_table('daily_prices')
    op.drop_table('symbology')
    op.drop_table('market_cap_scale')
    op.drop_table('income_annual')
    op.drop_table('currencies')
    op.drop_table('tickers')
    op.drop_table('balancesheet_quarterly')
    op.drop_table('financials')
    op.drop_table('asset_types')
    op.drop_table('data_vendors')
    op.drop_table('exchanges')
    op.drop_table('cashflow_quarterly')
    op.drop_table('fundamentals')
    op.drop_table('sector_types')
    op.drop_table('balancesheet_annual')
    op.drop_table('cashflow_annual')
    op.drop_table('indices')
    op.drop_table('events')
    op.drop_table('sub_exchanges')
    op.drop_table('summary')
    op.drop_table('sectors')
    op.drop_table('income_quarterly')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('income_quarterly',
    sa.Column('symbol_id', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('total_revenue', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('cost_of_revenue', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('gross_profit', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('research_development', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('selling_general_administrative', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_operating_expenses', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operating_income', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_other_income_expense_net', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ebit', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('interest_expense', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('income_before_tax', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('income_tax_expense', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('net_income_from_continuing_ops', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('net_income', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('net_income_applicable_to_common_shares', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('symbol_id', 'end_date', name='income_quarterly_pkey')
    )
    op.create_table('sectors',
    sa.Column('sector_id', sa.SMALLINT(), server_default=sa.text("nextval('sectors_sector_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('type_id', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('sector', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('industry', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('sector_id', name='sectors_pkey')
    )
    op.create_table('summary',
    sa.Column('symbol_id', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('address1', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('zip', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=25), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=5), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('industry', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sector', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('long_business_summary', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('fulltime_employees', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price_hint', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('previous_close', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('open', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('day_low', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('day_high', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('regular_market_previous_close', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('regular_market_open', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('regular_market_day_low', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('regular_market_day_high', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('dividend_rate', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('dividend_yield', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('ex_dividend_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('payout_ratio', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('five_year_avg_dividend_yield', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('beta', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('trailing_pe', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('forward_pe', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('volume', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('regular_market_volume', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('average_volume', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('average_volume_10days', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('average_daily_volume_10day', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('bid', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('ask', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('bid_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ask_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('market_cap', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('fifty_two_week_low', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('fifty_two_week_high', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('price_to_sales_trailing_12months', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('fifty_day_average', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('two_hundred_day_average', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('trailing_annual_dividend_rate', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('trailing_annual_dividend_yield', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=6), autoincrement=False, nullable=True),
    sa.Column('from_currency', sa.VARCHAR(length=6), autoincrement=False, nullable=True),
    sa.Column('to_currency', sa.VARCHAR(length=6), autoincrement=False, nullable=True),
    sa.Column('last_market', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('algorithm', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tradeable', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('symbol_id', name='summary_pkey')
    )
    op.create_table('sub_exchanges',
    sa.Column('subexchange_id', sa.SMALLINT(), server_default=sa.text("nextval('sub_exchanges_subexchange_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('subexchange_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('exchange_id', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('subexchange_id', name='sub_exchanges_pkey')
    )
    op.create_table('events',
    sa.Column('symbol_id', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('dividend_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('ex_dividend_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('earnings_average', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('earnings_low', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('earnings_high', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('revenue_average', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('revenue_low', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('revenue_high', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('start_earnings_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_earnings_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('symbol_id', name='events_pkey')
    )
    op.create_table('indices',
    sa.Column('ticker_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('index_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('ticker_id', 'index_id', name='indices_pkey')
    )
    op.create_table('cashflow_annual',
    sa.Column('symbol_id', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('net_income', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('depreciation', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('change_to_netincome', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('change_to_liabilities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('change_to_operating_activities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_cash_from_operating_activities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('capital_expenditures', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('investments', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_cashflows_from_investing_activities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('net_borrowings', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('other_cashflows_from_financing_activities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_cash_from_financing_activities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('effect_of_exchange_rate', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('change_in_cash', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('repurchase_of_stock', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('change_to_account_receivables', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('dividends_paid', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('symbol_id', 'end_date', name='cashflow_annual_pkey')
    )
    op.create_table('balancesheet_annual',
    sa.Column('symbol_id', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('cash', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('short_term_investments', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('net_receivables', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('inventory', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('other_current_assets', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_current_assets', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('long_term_investments', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('property_plant_equipment', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('other_assets', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_assets', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('accounts_payable', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('short_long_term_debt', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('other_current_liab', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('long_term_debt', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('other_liab', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_current_liabilities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_liab', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('common_stock', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('retained_earnings', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('treasury_stock', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('other_stockholder_equity', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_stockholder_equity', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('net_tangible_assets', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('symbol_id', 'end_date', name='balancesheet_annual_pkey')
    )
    op.create_table('sector_types',
    sa.Column('sector_type_id', sa.SMALLINT(), server_default=sa.text("nextval('sector_types_sector_type_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('sector_type_name', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('sector_type_id', name='sector_types_pkey')
    )
    op.create_table('fundamentals',
    sa.Column('symbol_id', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('price_hint', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('enterprise_value', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('forward_pe', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('profit_margins', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('float_shares', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('shares_outstanding', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('shares_short', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('shares_short_prior_month', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('shares_short_previous_month_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_short_interest', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('shares_percent_shares_out', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('held_percent_insiders', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('held_percent_institutions', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('short_ratio', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('short_percent_float', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('beta', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('book_value', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('price_to_book', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('fund_family', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('legal_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_fiscal_year_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('next_fiscal_year_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('most_recent_quarter', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('earnings_quarterly_growth', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('net_income_to_common', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('trailing_eps', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('forward_eps', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('peg_ratio', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('last_split_factor', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_split_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('enterprise_to_revenue', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('enterprise_to_ebitda', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('_52_week_change', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('sand_p52_week_change', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('last_dividend_value', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('last_dividend_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('symbol_id', name='fundamentals_pkey')
    )
    op.create_table('cashflow_quarterly',
    sa.Column('symbol_id', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('net_income', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('depreciation', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('change_to_netincome', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('change_to_liabilities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('change_to_operating_activities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_cash_from_operating_activities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('capital_expenditures', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('investments', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_cashflows_from_investing_activities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('net_borrowings', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('other_cashflows_from_financing_activities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_cash_from_financing_activities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('effect_of_exchange_rate', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('change_in_cash', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('repurchase_of_stock', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('change_to_account_receivables', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('dividends_paid', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('symbol_id', 'end_date', name='cashflow_quarterly_pkey')
    )
    op.create_table('exchanges',
    sa.Column('exchange_id', sa.SMALLINT(), server_default=sa.text("nextval('exchanges_exchange_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('goog_symbol', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('yahoo_symbol', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('csi_symbol', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tsid_symbol', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('time_zone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('utc_offset', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('open', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('close', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('lunch', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('exchange_id', name='exchanges_pkey'),
    sa.UniqueConstraint('symbol', name='exchanges_symbol_key')
    )
    op.create_table('data_vendors',
    sa.Column('data_vendor_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('support_email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('api', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('consensus_weight', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('data_vendor_id', name='data_vendors_pkey'),
    sa.UniqueConstraint('name', name='data_vendors_name_key')
    )
    op.create_table('asset_types',
    sa.Column('asset_type_id', sa.SMALLINT(), server_default=sa.text("nextval('asset_types_asset_type_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('asset_type_name', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('asset_type_code', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('asset_type_id', name='asset_types_pkey')
    )
    op.create_table('financials',
    sa.Column('symbol_id', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('current_price', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('target_high_price', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('target_low_price', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('target_mean_price', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('target_median_price', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('recommendation_mean', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('recommendation_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('number_of_analyst_opinions', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('total_cash', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_cash_per_share', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('ebitda', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_debt', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('quick_ratio', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('current_ratio', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('total_revenue', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('debt_to_equity', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('revenue_per_share', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('return_on_assets', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('return_on_equity', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('gross_profits', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('free_cashflow', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operating_cashflow', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('earnings_growth', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('revenue_growth', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('gross_margins', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('ebitda_margins', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('operating_margins', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('profit_margins', sa.NUMERIC(precision=12, scale=6), autoincrement=False, nullable=True),
    sa.Column('financial_currency', sa.VARCHAR(length=6), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('symbol_id', name='financials_pkey')
    )
    op.create_table('balancesheet_quarterly',
    sa.Column('symbol_id', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('cash', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('short_term_investments', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('net_receivables', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('other_current_assets', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_current_assets', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('long_term_investments', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('property_plant_equipment', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('intangible_assets', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('other_assets', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('deferred_long_term_asset_charges', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_assets', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('accounts_payable', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('short_long_term_debt', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('other_current_liab', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('long_term_debt', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('other_liab', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_current_liabilities', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_liab', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('common_stock', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('retained_earnings', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('treasury_stock', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('other_stockholder_equity', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_stockholder_equity', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('net_tangible_assets', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('symbol_id', 'end_date', name='balancesheet_quarterly_pkey')
    )
    op.create_table('tickers',
    sa.Column('symbol_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tsid', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('exchange_id', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('sub_exchange_id', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('asset_type_id', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('sector_id', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('currency_id', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('market_cap_scale_id', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('symbol_id', name='tickers_pkey')
    )
    op.create_table('currencies',
    sa.Column('currency_id', sa.SMALLINT(), server_default=sa.text("nextval('currencies_currency_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('currency_code', sa.VARCHAR(length=8), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('currency_id', name='currencies_pkey')
    )
    op.create_table('income_annual',
    sa.Column('symbol_id', sa.VARCHAR(length=12), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('total_revenue', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('cost_of_revenue', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('gross_profit', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('research_development', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('selling_general_administrative', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_operating_expenses', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operating_income', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('total_other_income_expense_net', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ebit', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('interest_expense', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('income_before_tax', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('income_tax_expense', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('net_income_from_continuing_ops', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('net_income', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('net_income_applicable_to_common_shares', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('symbol_id', 'end_date', name='income_annual_pkey')
    )
    op.create_table('market_cap_scale',
    sa.Column('scale_id', sa.SMALLINT(), server_default=sa.text("nextval('market_cap_scale_scale_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('scale_name', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('min_value', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('max_value', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('scale_id', name='market_cap_scale_pkey')
    )
    op.create_table('symbology',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('symbol_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('source', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('source_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='symbology_pkey')
    )
    op.create_table('daily_prices',
    sa.Column('data_vendor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('symbol_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('open', sa.NUMERIC(precision=20, scale=6), autoincrement=False, nullable=True),
    sa.Column('high', sa.NUMERIC(precision=20, scale=6), autoincrement=False, nullable=True),
    sa.Column('low', sa.NUMERIC(precision=20, scale=6), autoincrement=False, nullable=True),
    sa.Column('close', sa.NUMERIC(precision=20, scale=6), autoincrement=False, nullable=True),
    sa.Column('adjclose', sa.NUMERIC(precision=20, scale=6), autoincrement=False, nullable=True),
    sa.Column('volume', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('dividends', sa.NUMERIC(precision=10, scale=6), autoincrement=False, nullable=True),
    sa.Column('splits', sa.NUMERIC(precision=10, scale=6), autoincrement=False, nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('dt_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('data_vendor_id', 'symbol_id', 'date', name='daily_prices_pk')
    )
    op.create_index('daily_prices_index', 'daily_prices', ['data_vendor_id', 'symbol_id', 'date'], unique=False)
    # ### end Alembic commands ###
